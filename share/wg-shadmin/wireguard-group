#!/bin/sh
#--------------------------------------------------------------------------------+
# BSD 3-Clause License
#
# Copyright (c) 2022,2023 Alonso CÃ¡rdenas (acardenas@bsd-peru.org)
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its
#    contributors may be used to endorse or promote products derived from
#    this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

group_generate_id() {
	local _file="$1"
	local _n

	_n=0

	if [ -f "${_file}" ]; then
		_n=$(tail -n 1 ${_file} | cut -d '=' -f1 | cut -d '-' -f2)
	fi

	_n=$((_n+1))

	echo ${_n}
}

group_list() {
	local _file="$1"
	local _group
	local _group_name
	local _group_desc
	local _group_list=""
	local _n=0

	while read _group
	do
		_n=$((n+1))
		_group_name=$(echo "${_group}" | cut -d '=' -f1)
		_group_desc=$(echo "${_group}" | cut -d '"' -f2)

		if [ ${_n} -eq 1 ]; then
			_group_list="${_group_list} $(echo ${_group_name} \"${_group_desc}\" on)"
		else
			_group_list="${_group_list} $(echo ${_group_name} \"${_group_desc}\" off)"
		fi
	done < ${_file}

	echo ${_group_list}
}

group_save() {
	local _group_name="$1"
	local _group_desc="$2"

	util_create_file "${ETCPATH}/wg-shadmin-groups.conf"

	echo "${_group_name}=\"${_group_desc}\"" >> "${ETCPATH}/wg-shadmin-groups.conf"

	return 0
}
